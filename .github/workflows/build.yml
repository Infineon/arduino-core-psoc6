name: Build on Linux OS

# on which event should we start push, pull request or schedule dispatches
on:
  - push
  - pull_request

jobs:

  # The build job compiles the sample code for different boards
  build:

    # we run this on self hosted runner, use labels to be more specific
    # add specific names if there are some, otherwise self-hosted, X64, Linux are the default ones
    runs-on:
      - self-hosted
      - X64
      - Linux
      - PSoC

    strategy:

      matrix:
        # List of all examples in the lib to compile
        example: [
            examples/testSketch/testSketch.ino
        ]

        # board packages we want to run
        # attention the matrix spans over the fqbn not platform so that we can choose different boards
        fqbn: [
          "infineon:psoc:cy8ckit_062s2_ai"
        ]

        # include additional information for each fqbn, in this case the platform name to install
        include:
        - fqbn:     "infineon:psoc:cy8ckit_062s2_ai"
          platform: "infineon:psoc"

    # These are the steps which should run for each combination of fqbn and example code
    steps:

      - name: Checkout repository 
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Generate package json
        run: |
          python ./tools/release.py build-local
  
      - name: Start local HTTP server
        run: |
          cd pkg_build
          nohup python -m http.server 8000 & echo $! > server.pid
        
      - name: Install/Update Arduino Platform
        run: |
          arduino-cli core update-index
          arduino-cli core install ${{ matrix.platform }} --additional-urls http://localhost:8000/package_psoc_index.json
          arduino-cli core list
      
      - name: Kill local HTTP server
        run: |
          cd pkg_build
          kill $(cat server.pid)
          rm server.pid

      # Compile the sample code for the selected board and board support package with the arduino compiler
      - name: Compile Sketch
        run: |
          arduino-cli compile --clean --verbose --fqbn ${{ matrix.fqbn }} ${{ matrix.example }}
